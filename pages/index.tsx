import { trace } from "console";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import React, { FormEvent, useState } from "react";
import styles from "../styles/Home.module.css";

const Home: NextPage = () => {
  const [qArr, setQArr] = useState([
    {
      q: "A",
      alt_A: false,
      alt_B: false,
      alt_C: false,
      altA_q: "",
      altB_q: "",
      altC_q: "",
    },
  ]);

  const handleAddFields = () => {
    const values = [...qArr];
    console.log("RUn");

    // check if the prev has a Q and >=1 answer
    // else display error In Q or Answers
    // Trim() before save and create a new Q

    // start with finding the last Q in the array

    let lastQ =
      values[values.length - 1] === undefined
        ? values[0]
        : values[values.length - 1];

    console.log(lastQ);

    // check for Q and Answers are not empty

    if (
      lastQ.q !== "" &&
      lastQ.altA_q !== "" &&
      lastQ.altB_q !== "" &&
      lastQ.altC_q !== ""
    ) {
      console.log("Q here");

      // check for  >=1 Answers are selected

      if (lastQ.alt_A || lastQ.alt_B || lastQ.alt_C) {
        values.push({
          q: "",
          alt_A: false,
          alt_B: false,
          alt_C: false,
          altA_q: "",
          altB_q: "",
          altC_q: "",
        });
        setQArr(values);
      }
    }
  };

  
  const handleRemoveFields = (index: number) => {
    const values = [...qArr];
    values.splice(index, 1);
    setQArr(values);
  };

  const handleInputChange = (
    index: number,
    event: React.FormEvent<HTMLInputElement>
  ) => {
    const values = [...qArr];
    const target = event.target as typeof event.target & {
      name: string;
      value: any;
    };

    // change to Switch

    if (target.name === "q_" && target.value !== " ") {
      console.log(target.name);

      values[index].q = target.value;
    } else if (target.name === "altA_q" && target.value !== " ") {
      values[index].altA_q = target.value;
    } else if (target.name === "altB_q" && target.value !== " ") {
      values[index].altB_q = target.value;
    } else if (target.name === "altC_q" && target.value !== " ") {
      values[index].altC_q = target.value;
    } else if (target.name === "altA") {
      values[index].alt_A = !values[index].alt_A;
    } else if (target.name === "altB") {
      values[index].alt_B = !values[index].alt_B;
    } else if (target.name === "altC") {
      values[index].alt_C = !values[index].alt_C;
    }

    setQArr(values);
  };

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {
    e.preventDefault();
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Quiz App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1>Create Quiz</h1>
        <form onSubmit={(e) => handleSubmit(e)}>
          <div>
            {qArr.map((q, index) => {
              return (
                <>
                  <br />
                  <div key={`${q}~${index}`}>
                    <div>
                      <label htmlFor="q_">Write Q here</label>
                      <input
                        type="text"
                        // className="form-control"
                        id="q_"
                        name="q_"
                        value={q.q}
                        onChange={(event) => handleInputChange(index, event)}
                      />
                    </div>
                    <h4>Select the correct answer</h4>
                    <div>
                      <label htmlFor="altA">Add Answer</label>
                      <input
                        type="checkbox"
                        // className="form-control"
                        id="altA"
                        name="altA"
                        // value={q.q}
                        checked={q.alt_A}
                        onChange={(event) => handleInputChange(index, event)}
                      />
                      <input
                        type="text"
                        // className="form-control"
                        id="altA_q"
                        name="altA_q"
                        value={q.altA_q}
                        onChange={(event) => handleInputChange(index, event)}
                      />
                    </div>

                    <div>
                      <label htmlFor="altB">Add Answer</label>
                      <input
                        type="checkbox"
                        // className="form-control"
                        id="altB"
                        name="altB"
                        // value={q.q}
                        checked={q.alt_B}
                        onChange={(event) => handleInputChange(index, event)}
                      />
                      <input
                        type="text"
                        // className="form-control"
                        id="altB_q"
                        name="altB_q"
                        value={q.altB_q}
                        onChange={(event) => handleInputChange(index, event)}
                      />
                    </div>

                    <div>
                      <label htmlFor="altC">Add Answer</label>
                      <input
                        type="checkbox"
                        // className="form-control"
                        id="altC"
                        name="altC"
                        // value={q.q}
                        checked={q.alt_C}
                        onChange={(event) => handleInputChange(index, event)}
                      />
                      <input
                        type="text"
                        // className="form-control"
                        id="altC_q"
                        name="altC_q"
                        value={q.altC_q}
                        onChange={(event) => handleInputChange(index, event)}
                      />
                    </div>
                  </div>
                </>
              );
            })}
          </div>

          <br />
          <br />
        </form>
        <button onClick={() => handleAddFields()}>Add More</button>
        <button>Finish Quiz</button>
      </main>
    </div>
  );
};

export default Home;
